{
  "openapi": "3.0.0",
  "info": {
    "title": "Kuefa-API",
    "description": "This is the Rest-API specification for server-side API.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001/api",
      "description": " Server-1"
    }
  ],
  "paths": {
    "/events": {
      "get": {
        "responses": {
          "200": {
            "description": "List of the events",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error while listing events",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error while listing events",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "get filtered event list",
        "description": "GetEvents lists events according to the filter parameters.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "limit the number of events in the list, 0 means unlimited",
            "schema": {
              "type": "integer",
              "format": "int64",
              "description": "limit the number of events in the list, 0 means unlimited"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "number of events to skip in the list",
            "schema": {
              "type": "integer",
              "format": "int64",
              "description": "number of events to skip in the list"
            }
          }
        ],
        "operationId": "GetEvents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successfully created the event",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateEventResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error while creating the event",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error while creating the event",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "create an event",
        "description": "CreateEvent allows to create an event.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "CreateEvent"
      }
    },
    "/images": {
      "post": {
        "responses": {
          "200": {
            "description": "Successfully uploaded the image",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadImageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error while uploading the image",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error while uploading the image",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "upload an image",
        "description": "UploadImage allows to upload an image.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "image"
                ],
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "the image to upload"
                  },
                  "isTitle": {
                    "type": "boolean",
                    "description": "will mark the image as title image for an event"
                  }
                },
                "description": "UploadImageRequest is the request definition for uploading images. It's possible to upload a single image with multipart/form-data encoding."
              }
            }
          },
          "required": true
        },
        "operationId": "UploadImage"
      }
    }
  },
  "components": {
    "schemas": {
      "CreateEventRequest": {
        "type": "object",
        "required": [
          "theme",
          "imageID",
          "startingDate",
          "closingDate",
          "starter",
          "mainDish",
          "dessert",
          "description"
        ],
        "properties": {
          "theme": {
            "type": "string",
            "description": "the topic of the event"
          },
          "imageID": {
            "type": "string",
            "description": "the topic of the event"
          },
          "startingDate": {
            "type": "string",
            "format": "date-time",
            "description": "the date when the event begins"
          },
          "closingDate": {
            "type": "string",
            "format": "date-time",
            "description": "the closing date for signing up to the event"
          },
          "starter": {
            "type": "string",
            "description": "the starter of the event"
          },
          "mainDish": {
            "type": "string",
            "description": "the main dish of the event"
          },
          "dessert": {
            "type": "string",
            "description": "the dessert of the event"
          },
          "description": {
            "type": "string",
            "description": "the description of the event"
          }
        },
        "description": "CreateEventRequest is the request definition for creating events"
      },
      "CreateEventResponse": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "a UUIDv4 to identify the event"
          }
        },
        "description": "CreateEventResponse is the response after an event was created successfully"
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "errorCode",
          "description"
        ],
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "Generic code to detect kind of error"
          },
          "description": {
            "type": "string",
            "description": "Human-readable description of the error"
          },
          "additionalAttributes": {
            "type": "object",
            "additionalProperties": {},
            "description": "Additional data to describe the error"
          }
        },
        "description": "ErrorResponse is the generic response for all failed API-calls."
      },
      "EventTeaser": {
        "type": "object",
        "required": [
          "id",
          "thumbnailURL",
          "theme",
          "date"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "a UUIDv4 to identify the event"
          },
          "thumbnailURL": {
            "type": "string",
            "description": "link to the event thumbnail"
          },
          "theme": {
            "type": "string",
            "description": "the topic of the event"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "the time when the event begins"
          }
        }
      },
      "GetEventsResponse": {
        "type": "object",
        "required": [
          "events"
        ],
        "properties": {
          "events": {
            "type": "array",
            "description": "the list of events",
            "items": {
              "$ref": "#/components/schemas/EventTeaser"
            }
          }
        },
        "description": "GetEventsResponse is the response containing the list of events"
      },
      "UploadImageRequest": {
        "type": "object",
        "required": [
          "image"
        ],
        "properties": {
          "image": {
            "type": "string",
            "format": "binary",
            "description": "the image to upload"
          },
          "isTitle": {
            "type": "boolean",
            "description": "will mark the image as title image for an event"
          }
        },
        "description": "UploadImageRequest is the request definition for uploading images. It's possible to upload a single image with multipart/form-data encoding."
      },
      "UploadImageResponse": {
        "type": "object",
        "required": [
          "id",
          "imageURL",
          "thumbnailURL"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "a UUIDv4 to identify the image"
          },
          "imageURL": {
            "type": "string",
            "description": "relative URL to access the image"
          },
          "thumbnailURL": {
            "type": "string",
            "description": "relative URL to access a thumbnail of the image"
          }
        },
        "description": "UploadImageResponse is the response after an image was uploaded successfully."
      }
    }
  }
}